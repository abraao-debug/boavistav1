# Generated by Django 5.2.5 on 2025-09-04 04:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaSC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Categoria de SC',
                'verbose_name_plural': 'Categorias de SC',
            },
        ),
        migrations.CreateModel(
            name='Obra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da Obra')),
                ('endereco', models.CharField(blank=True, max_length=200, verbose_name='Endereço')),
                ('data_inicio', models.DateField(blank=True, null=True, verbose_name='Data de Início')),
                ('data_fim', models.DateField(blank=True, null=True, verbose_name='Data de Fim')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
            ],
            options={
                'verbose_name': 'Obra',
                'verbose_name_plural': 'Obras',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='UnidadeMedida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
                ('sigla', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'verbose_name': 'Unidade de Medida',
                'verbose_name_plural': 'Unidades de Medida',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('perfil', models.CharField(choices=[('almoxarife_obra', 'Almoxarife da Obra'), ('engenheiro', 'Engenheiro'), ('almoxarife_escritorio', 'Almoxarife do Escritório')], max_length=30)),
                ('telefone', models.CharField(blank=True, max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('obras', models.ManyToManyField(blank=True, related_name='usuarios', to='materiais.obra')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CategoriaItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('categoria_mae', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategorias', to='materiais.categoriaitem')),
            ],
            options={
                'verbose_name': 'Categoria de Item',
                'verbose_name_plural': 'Categorias de Itens',
                'unique_together': {('nome', 'categoria_mae')},
            },
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_fantasia', models.CharField(max_length=200, verbose_name='Nome Fantasia')),
                ('razao_social', models.CharField(max_length=200, verbose_name='Razão Social')),
                ('cnpj', models.CharField(max_length=18, unique=True)),
                ('tipo', models.CharField(choices=[('material', 'Material'), ('servico', 'Serviço'), ('ambos', 'Ambos')], default='material', max_length=10, verbose_name='Tipo')),
                ('email', models.EmailField(max_length=254)),
                ('contato_nome', models.CharField(blank=True, max_length=100, verbose_name='Nome do Contato')),
                ('contato_telefone', models.CharField(blank=True, max_length=15, verbose_name='Telefone do Contato')),
                ('contato_whatsapp', models.CharField(blank=True, max_length=15, verbose_name='WhatsApp do Contato')),
                ('cep', models.CharField(blank=True, max_length=9, verbose_name='CEP')),
                ('logradouro', models.CharField(blank=True, max_length=255, verbose_name='Logradouro')),
                ('numero', models.CharField(blank=True, max_length=20, verbose_name='Número')),
                ('bairro', models.CharField(blank=True, max_length=100, verbose_name='Bairro')),
                ('cidade', models.CharField(blank=True, max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(blank=True, max_length=2, verbose_name='UF')),
                ('ativo', models.BooleanField(default=True)),
                ('produtos_fornecidos', models.ManyToManyField(blank=True, limit_choices_to={'categoria_mae__isnull': False}, to='materiais.categoriaitem', verbose_name='Produtos/Serviços Fornecidos')),
            ],
            options={
                'verbose_name': 'Fornecedor',
                'verbose_name_plural': 'Fornecedores',
            },
        ),
        migrations.CreateModel(
            name='Cotacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cotacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Cotação')),
                ('prazo_entrega', models.CharField(blank=True, max_length=100, verbose_name='Prazo de Entrega')),
                ('condicao_pagamento', models.CharField(blank=True, max_length=100, verbose_name='Condição de Pagamento')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('vencedora', models.BooleanField(default=False, verbose_name='Cotação Vencedora')),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materiais.fornecedor')),
            ],
            options={
                'verbose_name': 'Cotação',
                'verbose_name_plural': 'Cotações',
            },
        ),
        migrations.CreateModel(
            name='ItemCatalogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Código')),
                ('descricao', models.CharField(max_length=200, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='materiais.categoriaitem', verbose_name='Categoria')),
                ('tags', models.ManyToManyField(blank=True, to='materiais.tag')),
                ('unidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='materiais.unidademedida', verbose_name='Unidade Padrão')),
            ],
            options={
                'verbose_name': 'Item do Catálogo',
                'verbose_name_plural': 'Itens do Catálogo',
            },
        ),
        migrations.CreateModel(
            name='ItemSolicitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=200)),
                ('unidade', models.CharField(max_length=50)),
                ('categoria', models.CharField(blank=True, max_length=200)),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=10)),
                ('observacoes', models.TextField(blank=True)),
                ('aprovado', models.BooleanField(default=False)),
                ('item_catalogo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='materiais.itemcatalogo')),
            ],
            options={
                'verbose_name': 'Item da Solicitação',
                'verbose_name_plural': 'Itens da Solicitação',
            },
        ),
        migrations.CreateModel(
            name='ItemCotacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço do Item')),
                ('selecionado', models.BooleanField(default=False, verbose_name='Item Vencedor')),
                ('cotacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens_cotados', to='materiais.cotacao')),
                ('item_solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens_cotados', to='materiais.itemsolicitacao')),
            ],
        ),
        migrations.CreateModel(
            name='RequisicaoMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=20, unique=True, verbose_name='Número RM')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status_assinatura', models.CharField(choices=[('pendente', 'Pendente de Assinaturas'), ('aguardando_engenheiro', 'Aguardando Engenheiro'), ('assinada', 'Assinada'), ('enviada', 'Enviada para Fornecedor')], default='pendente', max_length=30)),
                ('data_assinatura_almoxarife', models.DateTimeField(blank=True, null=True)),
                ('data_assinatura_engenheiro', models.DateTimeField(blank=True, null=True)),
                ('enviada_fornecedor', models.BooleanField(default=False)),
                ('data_envio_fornecedor', models.DateTimeField(blank=True, null=True)),
                ('assinatura_almoxarife', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rms_assinadas_almoxarife', to=settings.AUTH_USER_MODEL)),
                ('assinatura_engenheiro', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rms_assinadas_engenheiro', to=settings.AUTH_USER_MODEL)),
                ('cotacao_vencedora', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='materiais.cotacao')),
            ],
            options={
                'verbose_name': 'Requisição de Material (RM)',
                'verbose_name_plural': 'Requisições de Material (RMs)',
            },
        ),
        migrations.CreateModel(
            name='ItemRequisicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_recebida', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('data_recebimento', models.DateTimeField(blank=True, null=True)),
                ('documento_fiscal', models.FileField(blank=True, null=True, upload_to='documentos/')),
                ('observacoes', models.TextField(blank=True)),
                ('item_solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materiais.itemsolicitacao')),
                ('requisicao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='materiais.requisicaomaterial')),
            ],
            options={
                'verbose_name': 'Item da Requisição',
                'verbose_name_plural': 'Itens da Requisição',
            },
        ),
        migrations.CreateModel(
            name='ItemRecebimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_recebida', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quantidade Recebida')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações do Recebimento')),
                ('item_original', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materiais.itemsolicitacao')),
                ('requisicao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens_recebidos', to='materiais.requisicaomaterial')),
            ],
            options={
                'verbose_name': 'Item de Recebimento',
                'verbose_name_plural': 'Itens de Recebimento',
            },
        ),
        migrations.CreateModel(
            name='SolicitacaoCompra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(blank=True, max_length=100, unique=True, verbose_name='Código')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_necessidade', models.DateField()),
                ('justificativa', models.TextField(verbose_name='Observação Geral')),
                ('is_emergencial', models.BooleanField(default=False, verbose_name='Solicitação Emergencial')),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('pendente_aprovacao', 'Pendente de Aprovação'), ('aprovado_engenharia', 'Aprovado - Engenharia'), ('aprovada', 'Cotação - Para Iniciar'), ('rejeitada', 'Rejeitada'), ('em_cotacao', 'Cotação - Em Andamento'), ('aguardando_resposta', 'Cotação - Aguardando Resposta'), ('cotacao_selecionada', 'Cotação - Recebida/Analisar'), ('finalizada', 'Finalizada'), ('a_caminho', 'A Caminho'), ('recebida', 'Recebida')], default='rascunho', max_length=20)),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True)),
                ('observacoes_aprovacao', models.TextField(blank=True)),
                ('data_recebimento', models.DateTimeField(blank=True, null=True, verbose_name='Data de Recebimento')),
                ('aprovador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aprovacoes', to=settings.AUTH_USER_MODEL)),
                ('categoria_sc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='materiais.categoriasc', verbose_name='Categoria da SC')),
                ('obra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='materiais.obra')),
                ('recebedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Recebedor')),
                ('sc_mae', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scs_filhas', to='materiais.solicitacaocompra')),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitacoes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Solicitação de Compra',
                'verbose_name_plural': 'Solicitações de Compra',
            },
        ),
        migrations.AddField(
            model_name='requisicaomaterial',
            name='solicitacao_origem',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='requisicao', to='materiais.solicitacaocompra'),
        ),
        migrations.AddField(
            model_name='itemsolicitacao',
            name='solicitacao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='materiais.solicitacaocompra'),
        ),
        migrations.CreateModel(
            name='HistoricoSolicitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('acao', models.CharField(max_length=255)),
                ('detalhes', models.TextField(blank=True)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico', to='materiais.solicitacaocompra')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='EnvioCotacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_envio', models.DateTimeField(auto_now_add=True)),
                ('prazo_resposta', models.DateField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('aguardando', 'Aguardando Resposta'), ('respondido', 'Respondido')], default='aguardando', max_length=20)),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cotacoes_enviadas', to='materiais.fornecedor')),
                ('itens', models.ManyToManyField(related_name='envios', to='materiais.itemsolicitacao')),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='envios_cotacao', to='materiais.solicitacaocompra')),
            ],
            options={
                'verbose_name': 'Envio de Cotação',
                'verbose_name_plural': 'Envios de Cotação',
            },
        ),
        migrations.AddField(
            model_name='cotacao',
            name='solicitacao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cotacoes', to='materiais.solicitacaocompra'),
        ),
    ]
